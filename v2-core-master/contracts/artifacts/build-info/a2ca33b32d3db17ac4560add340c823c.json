{
	"id": "a2ca33b32d3db17ac4560add340c823c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"v2-core-master/contracts/DreamswapV2ERC20.sol": {
				"content": "pragma solidity =0.5.16;\n\nimport './interfaces/IDreamswapV2ERC20.sol';\nimport './libraries/SafeMath.sol';\n\ncontract DreamswapV2ERC20 is IDreamswapV2ERC20 {\n    using SafeMath for uint;\n\n    string public constant name = 'DreamSwap V2';\n    string public constant symbol = 'Dream-V2';\n    uint8 public constant decimals = 18;\n    uint  public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =  0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793;\n    mapping(address => uint) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    constructor() public {\n        uint chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name)),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        require(deadline >= block.timestamp, 'DreamswapV2: EXPIRED');\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                '\\x19\\x01',\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'DreamswapV2: INVALID_SIGNATURE');\n        _approve(owner, spender, value);\n    }\n}\n"
			},
			"v2-core-master/contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity =0.5.16;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}\n"
			},
			"v2-core-master/contracts/interfaces/IDreamswapV2ERC20.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IDreamswapV2ERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"v2-core-master/contracts/DreamswapV2ERC20.sol": {
				"DreamswapV2ERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":107:3449  contract DreamswapV2ERC20 is IDreamswapV2ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":930:1374  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1113:1208  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1017:1024  chainid */\n  chainid\n  swap1\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1113:1208  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1242:1246  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x0c\n  dup4\n  mstore\n  shl(0xa1, 0x223932b0b6a9bbb0b8102b19)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1276:1286  bytes('1') */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1085:1357  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1226:1248  keccak256(bytes(name)) */\n  0x9b1daab1f88b60b097a523df14326740c62b334d04c1477514adce1141d1bea4\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1085:1357  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1266:1287  keccak256(bytes('1')) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1085:1357  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1338:1342  this */\n  address\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1085:1357  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1085:1357  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1062:1367  keccak256(... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1043:1059  DOMAIN_SEPARATOR */\n  0x03\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1043:1367  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":107:3449  contract DreamswapV2ERC20 is IDreamswapV2ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":107:3449  contract DreamswapV2ERC20 is IDreamswapV2ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":107:3449  contract DreamswapV2ERC20 is IDreamswapV2ERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":190:234  string public constant name = 'DreamSwap V2' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":190:234  string public constant name = 'DreamSwap V2' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2188:2332  function approve(address spender, uint value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2188:2332  function approve(address spender, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_26\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":329:353  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2480:2775  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2480:2775  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":615:724  bytes32 public constant PERMIT_TYPEHASH =  0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 */\n    tag_7:\n      tag_27\n      tag_33\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":288:323  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":474:505  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_27\n      tag_37\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":359:400  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":359:400  mapping(address => uint) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":730:768  mapping(address => uint) public nonces */\n    tag_11:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":730:768  mapping(address => uint) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":240:282  string public constant symbol = 'Dream-V2' */\n    tag_12:\n      tag_18\n      tag_45\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2338:2474  function transfer(address to, uint value) external returns (bool) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2338:2474  function transfer(address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2781:3447  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2781:3447  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":406:467  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":406:467  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_58\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":190:234  string public constant name = 'DreamSwap V2' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xa1, 0x223932b0b6a9bbb0b8102b19)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2188:2332  function approve(address spender, uint value) external returns (bool) {... */\n    tag_26:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2252:2256  bool */\n      0x00\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2268:2304  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2277:2287  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2289:2296  spender */\n      dup5\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2298:2303  value */\n      dup5\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2268:2276  _approve */\n      tag_61\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2268:2304  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n      pop\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2321:2325  true */\n      0x01\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2188:2332  function approve(address spender, uint value) external returns (bool) {... */\n    tag_59:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":329:353  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2480:2775  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2578:2593  allowance[from] */\n      dup4\n      and\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2558:2562  bool */\n      0x00\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2578:2593  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2578:2587  allowance */\n      0x02\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2578:2593  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2594:2604  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2578:2605  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2578:2617  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2574:2712  if (allowance[from][msg.sender] != uint(-1)) {... */\n      tag_63\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2663:2678  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2663:2672  allowance */\n      0x02\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2663:2678  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2679:2689  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2663:2690  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2663:2701  allowance[from][msg.sender].sub(value) */\n      tag_64\n      swap1\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2695:2700  value */\n      dup4\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2663:2701  allowance[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2663:2694  allowance[from][msg.sender].sub */\n      tag_65\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2663:2701  allowance[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2633:2648  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2633:2642  allowance */\n      0x02\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2633:2648  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2649:2659  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2633:2660  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2633:2701  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      sstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2574:2712  if (allowance[from][msg.sender] != uint(-1)) {... */\n    tag_63:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2721:2747  _transfer(from, to, value) */\n      tag_66\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2731:2735  from */\n      dup5\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2737:2739  to */\n      dup5\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2741:2746  value */\n      dup5\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2721:2730  _transfer */\n      tag_67\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2721:2747  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n      pop\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2764:2768  true */\n      0x01\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2480:2775  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":615:724  bytes32 public constant PERMIT_TYPEHASH =  0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 */\n    tag_33:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":658:724  0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 */\n      0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":615:724  bytes32 public constant PERMIT_TYPEHASH =  0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 */\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":288:323  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":321:323  18 */\n      0x12\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":288:323  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":474:505  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":359:400  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":730:768  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":240:282  string public constant symbol = 'Dream-V2' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc1, 0x223932b0b696ab19)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2338:2474  function transfer(address to, uint value) external returns (bool) {... */\n    tag_52:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2398:2402  bool */\n      0x00\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2414:2446  _transfer(msg.sender, to, value) */\n      tag_60\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2424:2434  msg.sender */\n      caller\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2436:2438  to */\n      dup5\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2440:2445  value */\n      dup5\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2414:2423  _transfer */\n      tag_67\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2414:2446  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2781:3447  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_55:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2926:2941  block.timestamp */\n      timestamp\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2914:2922  deadline */\n      dup5\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2914:2941  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2906:2966  require(deadline >= block.timestamp, 'DreamswapV2: EXPIRED') */\n      tag_71\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x111c99585b5cddd85c158c8e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_71:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3078:3094  DOMAIN_SEPARATOR */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3173:3186  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2976:2990  bytes32 digest */\n      0x00\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3173:3186  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3173:3179  nonces */\n      0x04\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3173:3186  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3173:3188  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3122:3199  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup3\n      mload\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":658:724  0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 */\n      0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3122:3199  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3122:3199  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3112:3200  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3016:3214  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3016:3214  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2993:3224  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3261:3287  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2976:2990  bytes32 digest */\n      swap2\n      swap4\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3173:3188  nonces[owner]++ */\n      swap3\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3261:3287  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3173:3188  nonces[owner]++ */\n      dup6\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3261:3287  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n      pop\n      pop\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3261:3287  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3305:3335  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3305:3364  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_73\n      jumpi\n      pop\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3359:3364  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3339:3364  recoveredAddress == owner */\n      and\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3339:3355  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3339:3364  recoveredAddress == owner */\n      and\n      eq\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3305:3364  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3297:3399  require(recoveredAddress != address(0) && recoveredAddress == owner, 'DreamswapV2: INVALID_SIGNATURE') */\n      tag_74\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x447265616d7377617056323a20494e56414c49445f5349474e41545552450000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_74:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3409:3440  _approve(owner, spender, value) */\n      tag_75\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3418:3423  owner */\n      dup10\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3425:3432  spender */\n      dup10\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3434:3439  value */\n      dup10\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3409:3417  _approve */\n      tag_61\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":3409:3440  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2781:3447  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":406:467  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1794:1960  function _approve(address owner, address spender, uint value) private {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1874:1890  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1874:1883  allowance */\n      0x02\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1874:1890  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1874:1899  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1874:1907  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1922:1953  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1794:1960  function _approve(address owner, address spender, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":287:414  function sub(uint x, uint y) internal pure returns (uint z) {... */\n    tag_65:\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":370:375  x - y */\n      dup1\n      dup3\n      sub\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":365:381  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":357:407  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1966:2182  function _transfer(address from, address to, uint value) private {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2059:2074  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2059:2068  balanceOf */\n      0x01\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2059:2074  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2059:2085  balanceOf[from].sub(value) */\n      tag_80\n      swap1\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2079:2084  value */\n      dup3\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2059:2085  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2059:2078  balanceOf[from].sub */\n      tag_65\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2059:2085  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2041:2056  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2041:2050  balanceOf */\n      0x01\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2041:2056  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2041:2085  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2111:2124  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2111:2135  balanceOf[to].add(value) */\n      tag_81\n      swap1\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2129:2134  value */\n      dup3\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2111:2135  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2111:2128  balanceOf[to].add */\n      tag_82\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2111:2135  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2095:2108  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2095:2104  balanceOf */\n      0x01\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2095:2108  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2095:2135  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2150:2175  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2095:2108  balanceOf[to] */\n      swap2\n      swap4\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":2150:2175  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"v2-core-master/contracts/DreamswapV2ERC20.sol\":1966:2182  function _transfer(address from, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":155:281  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_82:\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":238:243  x + y */\n      dup1\n      dup3\n      add\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":233:249  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":225:274  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a723158205993c5d485796763f10333d8e63220ae80073704dfee7052e40e526a3b0e6a0864736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405146908060526109748239604080519182900360520182208282018252600c83526b223932b0b6a9bbb0b8102b1960a11b6020938401528151808301835260018152603160f81b908401528151808401919091527f9b1daab1f88b60b097a523df14326740c62b334d04c1477514adce1141d1bea4818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c09094019052825192019190912060035550610884806100f06000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610338565b604080519115158252519081900360200190f35b61019961034f565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610355565b6101996103ef565b6101f1610413565b6040805160ff9092168252519081900360200190f35b610199610418565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041e565b6101996004803603602081101561024b57600080fd5b50356001600160a01b0316610430565b6100dc610442565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610466565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610473565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610677565b6040518060400160405280600c81526020016b223932b0b6a9bbb0b8102b1960a11b81525081565b6000610345338484610694565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103da576001600160a01b03841660009081526002602090815260408083203384529091529020546103b5908363ffffffff6106f616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e5848484610746565b5060019392505050565b7f3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce79381565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b60405180604001604052806008815260200167223932b0b696ab1960c11b81525081565b6000610345338484610746565b428410156104bf576040805162461bcd60e51b8152602060048201526014602482015273111c99585b5cddd85c158c8e881156141254915160621b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce7938186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105da573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106105750886001600160a01b0316816001600160a01b0316145b610661576040805162461bcd60e51b815260206004820152601e60248201527f447265616d7377617056323a20494e56414c49445f5349474e41545552450000604482015290519081900360640190fd5b61066c898989610694565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610349576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b03831660009081526001602052604090205461076f908263ffffffff6106f616565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107a4908263ffffffff61080016565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610349576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a723158205993c5d485796763f10333d8e63220ae80073704dfee7052e40e526a3b0e6a0864736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x974 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP4 MSTORE PUSH12 0x223932B0B6A9BBB0B8102B19 PUSH1 0xA1 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x9B1DAAB1F88B60B097A523DF14326740C62B334D04C1477514ADCE1141D1BEA4 DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SSTORE POP PUSH2 0x884 DUP1 PUSH2 0xF0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x355 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x418 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41E JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x430 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x442 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x473 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x223932B0B6A9BBB0B8102B19 PUSH1 0xA1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 CALLER DUP5 DUP5 PUSH2 0x694 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B5 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6F6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E5 DUP5 DUP5 DUP5 PUSH2 0x746 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x223932B0B696AB19 PUSH1 0xC1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 CALLER DUP5 DUP5 PUSH2 0x746 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111C99585B5CDDD85C158C8E8811561412549151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x610 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x661 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x447265616D7377617056323A20494E56414C49445F5349474E41545552450000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x66C DUP10 DUP10 DUP10 PUSH2 0x694 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x349 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x76F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6F6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7A4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x800 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x349 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSIZE SWAP4 0xC5 0xD4 DUP6 PUSH26 0x6763F10333D8E63220AE80073704DFEE7052E40E526A3B0E6A08 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "107:3342:0:-;;;930:444;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1113:95:0;;1017:7;;1113:95;;;;;;;;;;;;;;;;1242:4;;;;;;;;-1:-1:-1;;;1242:4:0;;;;;1276:10;;;;;;;;;;-1:-1:-1;;;1276:10:0;;;;1085:272;;;;;;;;;1226:22;1085:272;;;;1266:21;1085:272;;;;;;;;;;;1338:4;1085:272;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1085:272:0;;;;;;1062:305;;;;;;;;1043:16;:324;-1:-1:-1;107:3342:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610338565b604080519115158252519081900360200190f35b61019961034f565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610355565b6101996103ef565b6101f1610413565b6040805160ff9092168252519081900360200190f35b610199610418565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041e565b6101996004803603602081101561024b57600080fd5b50356001600160a01b0316610430565b6100dc610442565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610466565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610473565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610677565b6040518060400160405280600c81526020016b223932b0b6a9bbb0b8102b1960a11b81525081565b6000610345338484610694565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103da576001600160a01b03841660009081526002602090815260408083203384529091529020546103b5908363ffffffff6106f616565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e5848484610746565b5060019392505050565b7f3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce79381565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b60405180604001604052806008815260200167223932b0b696ab1960c11b81525081565b6000610345338484610746565b428410156104bf576040805162461bcd60e51b8152602060048201526014602482015273111c99585b5cddd85c158c8e881156141254915160621b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce7938186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105da573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106105750886001600160a01b0316816001600160a01b0316145b610661576040805162461bcd60e51b815260206004820152601e60248201527f447265616d7377617056323a20494e56414c49445f5349474e41545552450000604482015290519081900360640190fd5b61066c898989610694565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610349576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b03831660009081526001602052604090205461076f908263ffffffff6106f616565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546107a4908263ffffffff61080016565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610349576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a723158205993c5d485796763f10333d8e63220ae80073704dfee7052e40e526a3b0e6a0864736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x355 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x418 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41E JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x430 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x442 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x466 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x473 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x677 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x223932B0B6A9BBB0B8102B19 PUSH1 0xA1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 CALLER DUP5 DUP5 PUSH2 0x694 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B5 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6F6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E5 DUP5 DUP5 DUP5 PUSH2 0x746 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x223932B0B696AB19 PUSH1 0xC1 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x345 CALLER DUP5 DUP5 PUSH2 0x746 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x111C99585B5CDDD85C158C8E8811561412549151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x610 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x661 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x447265616D7377617056323A20494E56414C49445F5349474E41545552450000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x66C DUP10 DUP10 DUP10 PUSH2 0x694 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x349 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x76F SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6F6 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7A4 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x800 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x349 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSIZE SWAP4 0xC5 0xD4 DUP6 PUSH26 0x6763F10333D8E63220AE80073704DFEE7052E40E526A3B0E6A08 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "107:3342:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;107:3342:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;190:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;190:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2188:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2188:144:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;329:24;;;:::i;:::-;;;;;;;;;;;;;;;;2480:295;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2480:295:0;;;;;;;;;;;;;;;;;:::i;615:109::-;;;:::i;288:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;474:31;;;:::i;359:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;359:41:0;-1:-1:-1;;;;;359:41:0;;:::i;730:38::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;730:38:0;-1:-1:-1;;;;;730:38:0;;:::i;240:42::-;;;:::i;2338:136::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2338:136:0;;;;;;;;:::i;2781:666::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;2781:666:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;406:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;406:61:0;;;;;;;;;;:::i;190:44::-;;;;;;;;;;;;;;-1:-1:-1;;;190:44:0;;;;:::o;2188:144::-;2252:4;2268:36;2277:10;2289:7;2298:5;2268:8;:36::i;:::-;-1:-1:-1;2321:4:0;2188:144;;;;;:::o;329:24::-;;;;:::o;2480:295::-;-1:-1:-1;;;;;2578:15:0;;2558:4;2578:15;;;:9;:15;;;;;;;;2594:10;2578:27;;;;;;;;-1:-1:-1;;2578:39:0;2574:138;;-1:-1:-1;;;;;2663:15:0;;;;;;:9;:15;;;;;;;;2679:10;2663:27;;;;;;;;:38;;2695:5;2663:38;:31;:38;:::i;:::-;-1:-1:-1;;;;;2633:15:0;;;;;;:9;:15;;;;;;;;2649:10;2633:27;;;;;;;:68;2574:138;2721:26;2731:4;2737:2;2741:5;2721:9;:26::i;:::-;-1:-1:-1;2764:4:0;2480:295;;;;;:::o;615:109::-;658:66;615:109;:::o;288:35::-;321:2;288:35;:::o;474:31::-;;;;:::o;359:41::-;;;;;;;;;;;;;:::o;730:38::-;;;;;;;;;;;;;:::o;240:42::-;;;;;;;;;;;;;;-1:-1:-1;;;240:42:0;;;;:::o;2338:136::-;2398:4;2414:32;2424:10;2436:2;2440:5;2414:9;:32::i;2781:666::-;2926:15;2914:8;:27;;2906:60;;;;;-1:-1:-1;;;2906:60:0;;;;;;;;;;;;-1:-1:-1;;;2906:60:0;;;;;;;;;;;;;;;3078:16;;-1:-1:-1;;;;;3173:13:0;;;2976:14;3173:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3122:77;;658:66;3122:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3122:77:0;;;;;3112:88;;;;;;-1:-1:-1;;;3016:198:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3016:198:0;;;;;;2993:231;;;;;;;;;3261:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:14;;3173:15;3261:26;;;;;-1:-1:-1;;3261:26:0;;;;;;;;;;3173:15;3261:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3261:26:0;;-1:-1:-1;;3261:26:0;;;-1:-1:-1;;;;;;;3305:30:0;;;;;;:59;;;3359:5;-1:-1:-1;;;;;3339:25:0;:16;-1:-1:-1;;;;;3339:25:0;;3305:59;3297:102;;;;;-1:-1:-1;;;3297:102:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3409:31;3418:5;3425:7;3434:5;3409:8;:31::i;:::-;2781:666;;;;;;;;;:::o;406:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1794:166::-;-1:-1:-1;;;;;1874:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;1922:31;;;;;;;;;;;;;;;;;1794:166;;;:::o;287:127:2:-;370:5;;;365:16;;;;357:50;;;;;-1:-1:-1;;;357:50:2;;;;;;;;;;;;-1:-1:-1;;;357:50:2;;;;;;;;;;;;;;1966:216:0;-1:-1:-1;;;;;2059:15:0;;;;;;:9;:15;;;;;;:26;;2079:5;2059:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2041:15:0;;;;;;;:9;:15;;;;;;:44;;;;2111:13;;;;;;;:24;;2129:5;2111:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2095:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2150:25;;;;;;;2095:13;;2150:25;;;;;;;;;;;;;1966:216;;;:::o;155:126:2:-;238:5;;;233:16;;;;225:49;;;;;-1:-1:-1;;;225:49:2;;;;;;;;;;;;-1:-1:-1;;;225:49:2;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1021",
								"PERMIT_TYPEHASH()": "287",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22343",
								"balanceOf(address)": "1169",
								"decimals()": "318",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 3449,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "MSTORE"
								},
								{
									"begin": 930,
									"end": 1374,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "MLOAD"
								},
								{
									"begin": 1017,
									"end": 1024,
									"name": "CHAINID"
								},
								{
									"begin": 1017,
									"end": 1024,
									"name": "SWAP1"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "DUP1"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "DUP3"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "CODECOPY"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "DUP1"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "MLOAD"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "SWAP2"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "DUP3"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "SWAP1"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "SUB"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "ADD"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "DUP3"
								},
								{
									"begin": 1113,
									"end": 1208,
									"name": "KECCAK256"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "DUP3"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "DUP3"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "ADD"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "DUP3"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "MSTORE"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "PUSH",
									"value": "C"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "DUP4"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "223932B0B6A9BBB0B8102B19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "SWAP4"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "DUP5"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "ADD"
								},
								{
									"begin": 1242,
									"end": 1246,
									"name": "MSTORE"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP2"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "MLOAD"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP1"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "ADD"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "MSTORE"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP2"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "SWAP1"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP5"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "ADD"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "MSTORE"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP2"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "MLOAD"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP1"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP5"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP2"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP2"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "MSTORE"
								},
								{
									"begin": 1226,
									"end": 1248,
									"name": "PUSH",
									"value": "9B1DAAB1F88B60B097A523DF14326740C62B334D04C1477514ADCE1141D1BEA4"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP2"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP4"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "MSTORE"
								},
								{
									"begin": 1266,
									"end": 1287,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP3"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "MSTORE"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP2"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP5"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP5"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "MSTORE"
								},
								{
									"begin": 1338,
									"end": 1342,
									"name": "ADDRESS"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP1"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP7"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP2"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP2"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "MSTORE"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "DUP2"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP5"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "SWAP1"
								},
								{
									"begin": 1085,
									"end": 1357,
									"name": "MSTORE"
								},
								{
									"begin": 1062,
									"end": 1367,
									"name": "DUP3"
								},
								{
									"begin": 1062,
									"end": 1367,
									"name": "MLOAD"
								},
								{
									"begin": 1062,
									"end": 1367,
									"name": "SWAP3"
								},
								{
									"begin": 1062,
									"end": 1367,
									"name": "ADD"
								},
								{
									"begin": 1062,
									"end": 1367,
									"name": "SWAP2"
								},
								{
									"begin": 1062,
									"end": 1367,
									"name": "SWAP1"
								},
								{
									"begin": 1062,
									"end": 1367,
									"name": "SWAP2"
								},
								{
									"begin": 1062,
									"end": 1367,
									"name": "KECCAK256"
								},
								{
									"begin": 1043,
									"end": 1059,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1043,
									"end": 1367,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "DUP1"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "CODECOPY"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 107,
									"end": 3449,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205993c5d485796763f10333d8e63220ae80073704dfee7052e40e526a3b0e6a0864736f6c63430005100032",
									".code": [
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "MSTORE"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "POP"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "LT"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "SHR"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "GT"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "GT"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMP"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPDEST"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMP"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPDEST"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "EQ"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPI"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "JUMPDEST"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "DUP1"
										},
										{
											"begin": 107,
											"end": 3449,
											"name": "REVERT"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "JUMPDEST"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "JUMPDEST"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MLOAD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP3"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MLOAD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MLOAD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP3"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP3"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP6"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "AND"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "ISZERO"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "JUMPI"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP3"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SUB"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MLOAD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP4"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SUB"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "EXP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SUB"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "NOT"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "AND"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "JUMPDEST"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP3"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MLOAD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SUB"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "RETURN"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "JUMPDEST"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "DUP1"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "DUP2"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "AND"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "ADD"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "JUMPDEST"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "DUP1"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "MLOAD"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SWAP2"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "ISZERO"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "ISZERO"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "DUP3"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "MSTORE"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "MLOAD"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "DUP2"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SUB"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "ADD"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "RETURN"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP3"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "MSTORE"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "MLOAD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SUB"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "ADD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "RETURN"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "JUMPDEST"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "DUP1"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "DUP2"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "DUP2"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "AND"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "SWAP2"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "DUP2"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "ADD"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "SWAP1"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "SWAP2"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "AND"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "SWAP1"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "ADD"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP3"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "AND"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP3"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MSTORE"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SUB"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "ADD"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "RETURN"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "JUMPDEST"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "JUMPDEST"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "DUP1"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "AND"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "JUMPDEST"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "DUP1"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "DUP2"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "AND"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "SWAP1"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "ADD"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "JUMPDEST"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "DUP1"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "AND"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SWAP2"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SWAP2"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "AND"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "DUP3"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "AND"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "DUP2"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "SWAP1"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "ADD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "JUMPDEST"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "STOP"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP1"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "AND"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SWAP2"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "ADD"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "AND"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "JUMPDEST"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MLOAD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "223932B0B6A9BBB0B8102B19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 190,
											"end": 234,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "JUMPDEST"
										},
										{
											"begin": 2252,
											"end": 2256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2277,
											"end": 2287,
											"name": "CALLER"
										},
										{
											"begin": 2289,
											"end": 2296,
											"name": "DUP5"
										},
										{
											"begin": 2298,
											"end": 2303,
											"name": "DUP5"
										},
										{
											"begin": 2268,
											"end": 2276,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "JUMPDEST"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SWAP3"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "SWAP2"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "POP"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "POP"
										},
										{
											"begin": 2188,
											"end": 2332,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "SLOAD"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "DUP4"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "AND"
										},
										{
											"begin": 2558,
											"end": 2562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "DUP2"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "MSTORE"
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "DUP2"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "MSTORE"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "DUP1"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "DUP4"
										},
										{
											"begin": 2578,
											"end": 2593,
											"name": "KECCAK256"
										},
										{
											"begin": 2594,
											"end": 2604,
											"name": "CALLER"
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "DUP5"
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "MSTORE"
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "SWAP2"
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "MSTORE"
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "DUP2"
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "KECCAK256"
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2578,
											"end": 2617,
											"name": "EQ"
										},
										{
											"begin": 2574,
											"end": 2712,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2574,
											"end": 2712,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP5"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "AND"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP2"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP2"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP1"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "DUP4"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "KECCAK256"
										},
										{
											"begin": 2679,
											"end": 2689,
											"name": "CALLER"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "DUP5"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "SWAP2"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "MSTORE"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "SWAP1"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "KECCAK256"
										},
										{
											"begin": 2663,
											"end": 2690,
											"name": "SLOAD"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "SWAP1"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP4"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2663,
											"end": 2694,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "AND"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2663,
											"end": 2701,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "DUP6"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "AND"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "SWAP1"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "DUP2"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "MSTORE"
										},
										{
											"begin": 2633,
											"end": 2642,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "SWAP1"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "DUP2"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "MSTORE"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "DUP1"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "DUP4"
										},
										{
											"begin": 2633,
											"end": 2648,
											"name": "KECCAK256"
										},
										{
											"begin": 2649,
											"end": 2659,
											"name": "CALLER"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "DUP5"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "MSTORE"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "SWAP1"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "SWAP2"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "MSTORE"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "SWAP1"
										},
										{
											"begin": 2633,
											"end": 2660,
											"name": "KECCAK256"
										},
										{
											"begin": 2633,
											"end": 2701,
											"name": "SSTORE"
										},
										{
											"begin": 2574,
											"end": 2712,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2574,
											"end": 2712,
											"name": "JUMPDEST"
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2731,
											"end": 2735,
											"name": "DUP5"
										},
										{
											"begin": 2737,
											"end": 2739,
											"name": "DUP5"
										},
										{
											"begin": 2741,
											"end": 2746,
											"name": "DUP5"
										},
										{
											"begin": 2721,
											"end": 2730,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "SWAP4"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "SWAP3"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "POP"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "POP"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "POP"
										},
										{
											"begin": 2480,
											"end": 2775,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "JUMPDEST"
										},
										{
											"begin": 658,
											"end": 724,
											"name": "PUSH",
											"value": "912A7665DC944E3AD1041C80ED902116211F588EC015389033FB5E54C0F334F4"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "DUP2"
										},
										{
											"begin": 615,
											"end": 724,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 288,
											"end": 323,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "JUMPDEST"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "SLOAD"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "DUP2"
										},
										{
											"begin": 474,
											"end": 505,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "MSTORE"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "MSTORE"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "KECCAK256"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "SLOAD"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 359,
											"end": 400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "JUMPDEST"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "MSTORE"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "SWAP1"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "DUP2"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "MSTORE"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "SWAP1"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "KECCAK256"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "SLOAD"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "DUP2"
										},
										{
											"begin": 730,
											"end": 768,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "MLOAD"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "DUP1"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "223932B0B696AB19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "MSTORE"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "POP"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "DUP2"
										},
										{
											"begin": 240,
											"end": 282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2338,
											"end": 2474,
											"name": "JUMPDEST"
										},
										{
											"begin": 2398,
											"end": 2402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2446,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2424,
											"end": 2434,
											"name": "CALLER"
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "DUP5"
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "DUP5"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2414,
											"end": 2446,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "JUMPDEST"
										},
										{
											"begin": 2926,
											"end": 2941,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2914,
											"end": 2922,
											"name": "DUP5"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "LT"
										},
										{
											"begin": 2914,
											"end": 2941,
											"name": "ISZERO"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "JUMPI"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "DUP1"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "DUP2"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "MSTORE"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "DUP3"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "ADD"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "MSTORE"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "DUP3"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "ADD"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "111C99585B5CDDD85C158C8E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "DUP3"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "ADD"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "MSTORE"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "SWAP1"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "MLOAD"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "SWAP1"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "DUP2"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "SWAP1"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "SUB"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "ADD"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "SWAP1"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "REVERT"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2906,
											"end": 2966,
											"name": "JUMPDEST"
										},
										{
											"begin": 3078,
											"end": 3094,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3078,
											"end": 3094,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP10"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "AND"
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP2"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP2"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "MSTORE"
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP2"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "MSTORE"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP4"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "KECCAK256"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "SLOAD"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "DUP1"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "DUP3"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "ADD"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "SWAP3"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "SSTORE"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP3"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MLOAD"
										},
										{
											"begin": 658,
											"end": 724,
											"name": "PUSH",
											"value": "912A7665DC944E3AD1041C80ED902116211F588EC015389033FB5E54C0F334F4"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP2"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP7"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP1"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP5"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP7"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP1"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP7"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP6"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP14"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "AND"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP7"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP6"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP13"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP1"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP6"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP6"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP1"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP6"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP1"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP6"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP12"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "SWAP1"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP2"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP6"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "ADD"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "DUP3"
										},
										{
											"begin": 3122,
											"end": 3199,
											"name": "MSTORE"
										},
										{
											"begin": 3112,
											"end": 3200,
											"name": "DUP1"
										},
										{
											"begin": 3112,
											"end": 3200,
											"name": "MLOAD"
										},
										{
											"begin": 3112,
											"end": 3200,
											"name": "SWAP1"
										},
										{
											"begin": 3112,
											"end": 3200,
											"name": "DUP4"
										},
										{
											"begin": 3112,
											"end": 3200,
											"name": "ADD"
										},
										{
											"begin": 3112,
											"end": 3200,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "DUP7"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "ADD"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "MSTORE"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "DUP6"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "ADD"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "SWAP7"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "SWAP1"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "SWAP7"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "MSTORE"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "DUP1"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "DUP6"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "ADD"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "SWAP7"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "SWAP1"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "SWAP7"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "MSTORE"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "DUP1"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "DUP5"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "ADD"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "DUP1"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "DUP3"
										},
										{
											"begin": 3016,
											"end": 3214,
											"name": "MSTORE"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "DUP7"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "MLOAD"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "SWAP7"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "DUP4"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "ADD"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "SWAP7"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "SWAP1"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "SWAP7"
										},
										{
											"begin": 2993,
											"end": 3224,
											"name": "KECCAK256"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP6"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP4"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP5"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP3"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP7"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP10"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP6"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP5"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP9"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP5"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP8"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MSTORE"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "SWAP2"
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "SWAP4"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "SWAP3"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP1"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP3"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP3"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "DUP2"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SUB"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP2"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP1"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "DUP6"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "GAS"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "STATICCALL"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "ADD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "MLOAD"
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3305,
											"end": 3335,
											"name": "DUP2"
										},
										{
											"begin": 3305,
											"end": 3335,
											"name": "AND"
										},
										{
											"begin": 3305,
											"end": 3335,
											"name": "ISZERO"
										},
										{
											"begin": 3305,
											"end": 3335,
											"name": "DUP1"
										},
										{
											"begin": 3305,
											"end": 3335,
											"name": "ISZERO"
										},
										{
											"begin": 3305,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3305,
											"end": 3364,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3305,
											"end": 3364,
											"name": "JUMPI"
										},
										{
											"begin": 3305,
											"end": 3364,
											"name": "POP"
										},
										{
											"begin": 3359,
											"end": 3364,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "AND"
										},
										{
											"begin": 3339,
											"end": 3355,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "AND"
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "EQ"
										},
										{
											"begin": 3305,
											"end": 3364,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3305,
											"end": 3364,
											"name": "JUMPDEST"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "JUMPI"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "DUP1"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "DUP3"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "ADD"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "DUP3"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "ADD"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH",
											"value": "447265616D7377617056323A20494E56414C49445F5349474E41545552450000"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "DUP3"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "ADD"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "MSTORE"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "MLOAD"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "DUP2"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "SUB"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "ADD"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "SWAP1"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "REVERT"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3297,
											"end": 3399,
											"name": "JUMPDEST"
										},
										{
											"begin": 3409,
											"end": 3440,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3418,
											"end": 3423,
											"name": "DUP10"
										},
										{
											"begin": 3425,
											"end": 3432,
											"name": "DUP10"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP10"
										},
										{
											"begin": 3409,
											"end": 3417,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3409,
											"end": 3440,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3409,
											"end": 3440,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3409,
											"end": 3440,
											"name": "JUMPDEST"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "POP"
										},
										{
											"begin": 2781,
											"end": 3447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SWAP1"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SWAP3"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP4"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP1"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP5"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "KECCAK256"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SWAP1"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SWAP2"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SWAP1"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP3"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "MSTORE"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SWAP1"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "KECCAK256"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "SLOAD"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "DUP2"
										},
										{
											"begin": 406,
											"end": 467,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1794,
											"end": 1960,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1794,
											"end": 1960,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "DUP1"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "DUP5"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "AND"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "SWAP1"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "DUP1"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "DUP4"
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "KECCAK256"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "SWAP5"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "DUP8"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "AND"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "DUP1"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "DUP5"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "SWAP5"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "DUP3"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "SWAP2"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "DUP3"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "SWAP1"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "KECCAK256"
										},
										{
											"begin": 1874,
											"end": 1907,
											"name": "DUP6"
										},
										{
											"begin": 1874,
											"end": 1907,
											"name": "SWAP1"
										},
										{
											"begin": 1874,
											"end": 1907,
											"name": "SSTORE"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "DUP2"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "MLOAD"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "DUP6"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "DUP2"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "MSTORE"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP2"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "MLOAD"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP3"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "DUP2"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP1"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SUB"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP1"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP2"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "ADD"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "SWAP1"
										},
										{
											"begin": 1922,
											"end": 1953,
											"name": "LOG3"
										},
										{
											"begin": 1794,
											"end": 1960,
											"name": "POP"
										},
										{
											"begin": 1794,
											"end": 1960,
											"name": "POP"
										},
										{
											"begin": 1794,
											"end": 1960,
											"name": "POP"
										},
										{
											"begin": 1794,
											"end": 1960,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 287,
											"end": 414,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "DUP3"
										},
										{
											"begin": 370,
											"end": 375,
											"name": "SUB"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "DUP3"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "DUP2"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "GT"
										},
										{
											"begin": 365,
											"end": 381,
											"name": "ISZERO"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "JUMPI"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP3"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MSTORE"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "MLOAD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "DUP2"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SUB"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "ADD"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "SWAP1"
										},
										{
											"begin": 357,
											"end": 407,
											"name": "REVERT"
										},
										{
											"begin": 1966,
											"end": 2182,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1966,
											"end": 2182,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "DUP4"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "AND"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "SWAP1"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "DUP2"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "MSTORE"
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "MSTORE"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "SWAP1"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "KECCAK256"
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "SLOAD"
										},
										{
											"begin": 2059,
											"end": 2085,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2059,
											"end": 2085,
											"name": "SWAP1"
										},
										{
											"begin": 2079,
											"end": 2084,
											"name": "DUP3"
										},
										{
											"begin": 2059,
											"end": 2085,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2078,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2059,
											"end": 2085,
											"name": "AND"
										},
										{
											"begin": 2059,
											"end": 2085,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2059,
											"end": 2085,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2059,
											"end": 2085,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP1"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP6"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP2"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP1"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP3"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "KECCAK256"
										},
										{
											"begin": 2041,
											"end": 2085,
											"name": "SWAP4"
										},
										{
											"begin": 2041,
											"end": 2085,
											"name": "SWAP1"
										},
										{
											"begin": 2041,
											"end": 2085,
											"name": "SWAP4"
										},
										{
											"begin": 2041,
											"end": 2085,
											"name": "SSTORE"
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "SWAP1"
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "DUP5"
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "AND"
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "DUP2"
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "MSTORE"
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "KECCAK256"
										},
										{
											"begin": 2111,
											"end": 2124,
											"name": "SLOAD"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "SWAP1"
										},
										{
											"begin": 2129,
											"end": 2134,
											"name": "DUP3"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2111,
											"end": 2128,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "AND"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "DUP1"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "DUP5"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "AND"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "DUP2"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "DUP2"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "MSTORE"
										},
										{
											"begin": 2095,
											"end": 2104,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "DUP2"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "MSTORE"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP2"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "DUP3"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "KECCAK256"
										},
										{
											"begin": 2095,
											"end": 2135,
											"name": "SWAP5"
										},
										{
											"begin": 2095,
											"end": 2135,
											"name": "SWAP1"
										},
										{
											"begin": 2095,
											"end": 2135,
											"name": "SWAP5"
										},
										{
											"begin": 2095,
											"end": 2135,
											"name": "SSTORE"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP1"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MLOAD"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP6"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MSTORE"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MLOAD"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP2"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP4"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP3"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP8"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "AND"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP3"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP3"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP2"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP3"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SUB"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "LOG3"
										},
										{
											"begin": 1966,
											"end": 2182,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2182,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2182,
											"name": "POP"
										},
										{
											"begin": 1966,
											"end": 2182,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 155,
											"end": 281,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "DUP3"
										},
										{
											"begin": 238,
											"end": 243,
											"name": "ADD"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "LT"
										},
										{
											"begin": 233,
											"end": 249,
											"name": "ISZERO"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 225,
											"end": 274,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/DreamswapV2ERC20.sol\":\"DreamswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/DreamswapV2ERC20.sol\":{\"keccak256\":\"0x49f7111a30baeff96b488ea2d3dd9978c98da8f0fd7f07fe2415556d8fb76f17\",\"urls\":[\"bzz-raw://0f3b77093e92c5d9887f829dc64969659cdd34f9bea1d3a876fb289fff79c373\",\"dweb:/ipfs/QmdHQwKSTQWqXkNn2cXUArnr7H5RtyTCx4QPyhXxWzVXmP\"]},\"v2-core-master/contracts/interfaces/IDreamswapV2ERC20.sol\":{\"keccak256\":\"0xf6b06c575aefaa8b3f32b2128d07904764dbf454c648edfa2bb3b3c79fa7bdf7\",\"urls\":[\"bzz-raw://93f3925de62b1afc982f5503e9e452308a8b38a5fd5a08fd48db99fd2c40f1ee\",\"dweb:/ipfs/QmWqfwEwbQypuNNy2csGRALhxxfrBdyUaDRozmLZbbBaGR\"]},\"v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "v2-core-master/contracts/DreamswapV2ERC20.sol:DreamswapV2ERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "v2-core-master/contracts/DreamswapV2ERC20.sol:DreamswapV2ERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "v2-core-master/contracts/DreamswapV2ERC20.sol:DreamswapV2ERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "v2-core-master/contracts/DreamswapV2ERC20.sol:DreamswapV2ERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "v2-core-master/contracts/DreamswapV2ERC20.sol:DreamswapV2ERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"v2-core-master/contracts/interfaces/IDreamswapV2ERC20.sol": {
				"IDreamswapV2ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/interfaces/IDreamswapV2ERC20.sol\":\"IDreamswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/interfaces/IDreamswapV2ERC20.sol\":{\"keccak256\":\"0xf6b06c575aefaa8b3f32b2128d07904764dbf454c648edfa2bb3b3c79fa7bdf7\",\"urls\":[\"bzz-raw://93f3925de62b1afc982f5503e9e452308a8b38a5fd5a08fd48db99fd2c40f1ee\",\"dweb:/ipfs/QmWqfwEwbQypuNNy2csGRALhxxfrBdyUaDRozmLZbbBaGR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"v2-core-master/contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"v2-core-master/contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"v2-core-master/contracts/libraries/SafeMath.sol\":132:562  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582073ced849df98e8176c6d3e52794cfcf20dd475dc95d301925c819e05098a504a64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582073ced849df98e8176c6d3e52794cfcf20dd475dc95d301925c819e05098a504a64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH20 0xCED849DF98E8176C6D3E52794CFCF20DD475DC95 0xD3 ADD SWAP3 0x5C DUP2 SWAP15 SDIV MULMOD DUP11 POP 0x4A PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "132:430:2:-;;:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582073ced849df98e8176c6d3e52794cfcf20dd475dc95d301925c819e05098a504a64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH20 0xCED849DF98E8176C6D3E52794CFCF20DD475DC95 0xD3 ADD SWAP3 0x5C DUP2 SWAP15 SDIV MULMOD DUP11 POP 0x4A PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "132:430:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 562,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582073ced849df98e8176c6d3e52794cfcf20dd475dc95d301925c819e05098a504a64736f6c63430005100032",
									".code": [
										{
											"begin": 132,
											"end": 562,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "ADDRESS"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "EQ"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "MSTORE"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "DUP1"
										},
										{
											"begin": 132,
											"end": 562,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"v2-core-master/contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2-core-master/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x9c8465de751317860b623cd77f7f53f41a84b6624c0580ee526dcf7a2b7cb80c\",\"urls\":[\"bzz-raw://9b371b3eb0649b486f76cd628cc060354d1ac11fa8baed1170567271655f05d7\",\"dweb:/ipfs/QmTUg31wK9UyX6o1Q1mxE4DQhuc1rWGBanNTu1uagNVQB6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"v2-core-master/contracts/DreamswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "v2-core-master/contracts/DreamswapV2ERC20.sol",
					"exportedSymbols": {
						"DreamswapV2ERC20": [
							384
						]
					},
					"id": 385,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "v2-core-master/contracts/interfaces/IDreamswapV2ERC20.sol",
							"file": "./interfaces/IDreamswapV2ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 503,
							"src": "26:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "v2-core-master/contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 578,
							"src": "71:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IDreamswapV2ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 502,
										"src": "136:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDreamswapV2ERC20_$502",
											"typeString": "contract IDreamswapV2ERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "136:17:0"
								}
							],
							"contractDependencies": [
								502
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								502
							],
							"name": "DreamswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 577,
										"src": "166:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$577",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "160:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "179:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "190:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "190:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "447265616d53776170205632",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "220:14:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9b1daab1f88b60b097a523df14326740c62b334d04c1477514adce1141d1bea4",
											"typeString": "literal_string \"DreamSwap V2\""
										},
										"value": "DreamSwap V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "240:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "240:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "447265616d2d5632",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "272:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b060b016256fe3e3870b557949fb1bea23cf6f3ff1b5420c3ad25b9fa1132722",
											"typeString": "literal_string \"Dream-V2\""
										},
										"value": "Dream-V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "288:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "288:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "321:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "329:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "329:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "359:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "367:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "359:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "378:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "406:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "433:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "425:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "444:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "474:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "474:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "615:109:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "615:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307839313261373636356463393434653361643130343163383065643930323131363231316635383865633031353338393033336662356535346330663333346634",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "658:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65660387773547566670783915712952226671910256817652776125691377971849791223028_by_1",
											"typeString": "int_const 6566...(69 digits omitted)...3028"
										},
										"value": "0x3569e9cc4f637721f292b483e72e83d5f82fed8320c23a4d832f3e597ddce793"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "730:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "738:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "730:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "749:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "790:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "813:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "838:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "789:60:0"
									},
									"src": "775:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "870:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "892:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "912:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "912:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "869:54:0"
									},
									"src": "855:69:0"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "951:423:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "961:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 59,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "961:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 58,
															"isOffset": false,
															"isSlot": false,
															"src": "1006:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "983:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1043:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1123:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 65,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1113:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1113:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 70,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1242:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 69,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1236:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1236:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 68,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1226:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1226:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 75,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1282:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 74,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1276:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 76,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1276:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 73,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "1266:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1266:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 78,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1305:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 80,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 610,
																				"src": "1338:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DreamswapV2ERC20_$384",
																					"typeString": "contract DreamswapV2ERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DreamswapV2ERC20_$384",
																					"typeString": "contract DreamswapV2ERC20"
																				}
																			],
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1330:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1330:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "1085:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1085:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1085:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 62,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "1062:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1062:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1043:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1043:324:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:0"
									},
									"scope": 384,
									"src": "930:444:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1428:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1438:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 97,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1468:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1452:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "1452:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1452:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1438:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1438:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 101,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1484:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 103,
														"indexExpression": {
															"argumentTypes": null,
															"id": 102,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1494:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1484:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "1518:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1500:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 106,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1510:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1500:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "1500:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1500:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1484:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1484:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1556:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1548:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1548:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1560:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "1564:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1539:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "EmitStatement",
												"src": "1534:36:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1395:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1407:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1394:24:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1428:0:0"
									},
									"scope": 384,
									"src": "1380:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1633:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1643:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"argumentTypes": null,
															"id": 129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1653:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1643:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1681:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1661:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1671:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1661:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "1661:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1661:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1643:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1643:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 139,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1697:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1727:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 140,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1711:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "1711:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1711:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1697:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "1697:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 147,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1757:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1771:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1763:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1775:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 146,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "1748:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "EmitStatement",
												"src": "1743:38:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1598:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "1612:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1612:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1597:26:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:0:0"
									},
									"scope": 384,
									"src": "1583:205:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1864:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1874:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 167,
															"indexExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1884:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1874:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 166,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1874:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 169,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1902:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1874:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1874:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 173,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1931:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1938:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1947:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 172,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "1922:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1922:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1917:36:0"
											}
										]
									},
									"documentation": null,
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1812:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1844:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1811:44:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1864:0:0"
									},
									"scope": 384,
									"src": "1794:166:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2031:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 188,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2041:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 190,
														"indexExpression": {
															"argumentTypes": null,
															"id": 189,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2051:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 195,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2079:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2059:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 193,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 192,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2069:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2059:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 548,
															"src": "2059:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2059:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2041:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2041:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2095:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2105:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2095:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2129:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2111:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 204,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 203,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2121:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2111:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "2111:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2111:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2095:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "2095:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2159:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2165:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2169:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 210,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2150:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2150:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "2145:30:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1985:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1999:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2011:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2011:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1984:38:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2031:0:0"
									},
									"scope": 384,
									"src": "1966:216:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "2258:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2277:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2277:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 229,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 230,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2298:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2268:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2268:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2321:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 225,
												"id": 234,
												"nodeType": "Return",
												"src": "2314:11:0"
											}
										]
									},
									"documentation": null,
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2204:29:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2252:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2252:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2251:6:0"
									},
									"scope": 384,
									"src": "2188:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 447,
									"visibility": "external"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2404:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 246,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2424:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2424:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "2436:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 249,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2440:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 245,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2414:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2414:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "2414:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2463:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 244,
												"id": 253,
												"nodeType": "Return",
												"src": "2456:11:0"
											}
										]
									},
									"documentation": null,
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2356:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2368:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2368:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2355:24:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2398:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2398:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2397:6:0"
									},
									"scope": 384,
									"src": "2338:136:0",
									"stateMutability": "nonpayable",
									"superFunction": 456,
									"visibility": "external"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "2564:211:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2578:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 268,
															"indexExpression": {
																"argumentTypes": null,
																"id": 267,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2588:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2578:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "2594:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2594:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2578:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2614:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2615:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2609:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2609:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2578:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 295,
												"nodeType": "IfStatement",
												"src": "2574:138:0",
												"trueBody": {
													"id": 294,
													"nodeType": "Block",
													"src": "2619:93:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 277,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2633:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 281,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 278,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "2643:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2633:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 279,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 592,
																			"src": "2649:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2649:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2633:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "2695:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 283,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "2663:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 285,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 284,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 257,
																					"src": "2673:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2663:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 288,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 286,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 592,
																					"src": "2679:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2679:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2663:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 548,
																		"src": "2663:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2663:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2633:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "2633:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 297,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2731:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 298,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2737:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 299,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2741:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 296,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "2721:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2721:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "2721:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2764:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 265,
												"id": 303,
												"nodeType": "Return",
												"src": "2757:11:0"
											}
										]
									},
									"documentation": null,
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2502:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2516:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2528:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2501:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2558:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2557:6:0"
									},
									"scope": 384,
									"src": "2480:295:0",
									"stateMutability": "nonpayable",
									"superFunction": 467,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "2896:551:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 323,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "2914:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 324,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "2926:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2926:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2914:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "447265616d7377617056323a2045585049524544",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2943:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_574571864bc61a3975fddcea7969fc7b13663a9daf9ee93c1deb1b9a83d1a11d",
																"typeString": "literal_string \"DreamswapV2: EXPIRED\""
															},
															"value": "DreamswapV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_574571864bc61a3975fddcea7969fc7b13663a9daf9ee93c1deb1b9a83d1a11d",
																"typeString": "literal_string \"DreamswapV2: EXPIRED\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "2906:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2906:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2906:60:0"
											},
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "2976:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 330,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3050:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 336,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3078:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 340,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3133:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 341,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 307,
																					"src": "3150:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 342,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "3157:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 343,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "3166:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3173:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 344,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3173:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 346,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 345,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 307,
																							"src": "3180:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3173:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 348,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 313,
																					"src": "3190:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 338,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 579,
																					"src": "3122:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3122:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3122:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 337,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "3112:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3112:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 333,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "3016:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3016:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3016:198:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 332,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "2993:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2993:231:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2976:248:0"
											},
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 382,
														"src": "3234:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 354,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3234:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 357,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3271:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 358,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3279:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 359,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "3282:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 360,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3285:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 356,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "3261:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3261:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3234:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 364,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3305:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3333:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3325:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3325:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3305:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 369,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "3339:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 370,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "3359:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3339:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3305:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "447265616d7377617056323a20494e56414c49445f5349474e4154555245",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3366:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f242dff2055e6dd078f23d8521b746e0a5a99855556772c03b6b751cae14679",
																"typeString": "literal_string \"DreamswapV2: INVALID_SIGNATURE\""
															},
															"value": "DreamswapV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f242dff2055e6dd078f23d8521b746e0a5a99855556772c03b6b751cae14679",
																"typeString": "literal_string \"DreamswapV2: INVALID_SIGNATURE\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "3297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3297:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3297:102:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "3425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "3434:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3409:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3409:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "3409:31:0"
											}
										]
									},
									"documentation": null,
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2797:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2812:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2829:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2841:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2841:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 314,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2865:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2876:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2796:90:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2896:0:0"
									},
									"scope": 384,
									"src": "2781:666:0",
									"stateMutability": "nonpayable",
									"superFunction": 501,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "107:3342:0"
						}
					],
					"src": "0:3450:0"
				},
				"id": 0
			},
			"v2-core-master/contracts/interfaces/IDreamswapV2ERC20.sol": {
				"ast": {
					"absolutePath": "v2-core-master/contracts/interfaces/IDreamswapV2ERC20.sol",
					"exportedSymbols": {
						"IDreamswapV2ERC20": [
							502
						]
					},
					"id": 503,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 386,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 502,
							"linearizedBaseContracts": [
								502
							],
							"name": "IDreamswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 394,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "75:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "98:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "98:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "123:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "123:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "74:60:1"
									},
									"src": "60:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 402,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "155:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "177:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "197:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "197:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "154:54:1"
									},
									"src": "140:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "254:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "254:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "253:15:1"
									},
									"scope": 502,
									"src": "215:54:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:1"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "315:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "315:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "314:15:1"
									},
									"scope": 502,
									"src": "274:56:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "378:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 414,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "378:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "377:7:1"
									},
									"scope": 502,
									"src": "335:50:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "436:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "436:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:6:1"
									},
									"scope": 502,
									"src": "390:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "466:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "465:15:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "504:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "504:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "503:6:1"
									},
									"scope": 502,
									"src": "447:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "534:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "549:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "533:32:1"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "589:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "589:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "588:6:1"
									},
									"scope": 502,
									"src": "515:80:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "618:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "635:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "635:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:29:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "665:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "665:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "664:6:1"
									},
									"scope": 502,
									"src": "601:70:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "694:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "706:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "706:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "693:24:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "736:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "736:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "735:6:1"
									},
									"scope": 502,
									"src": "676:66:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "769:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "783:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "795:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "768:38:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "825:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "825:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "824:6:1"
									},
									"scope": 502,
									"src": "747:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "888:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 469,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "887:9:1"
									},
									"scope": 502,
									"src": "837:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:2:1"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "952:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "951:9:1"
									},
									"scope": 502,
									"src": "902:59:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "982:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "981:15:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1020:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1020:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1019:6:1"
									},
									"scope": 502,
									"src": "966:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1048:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1063:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1080:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1080:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1092:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1107:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 493,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1107:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1116:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1127:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 497,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1047:90:1"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1146:0:1"
									},
									"scope": 502,
									"src": "1032:115:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 503,
							"src": "26:1123:1"
						}
					],
					"src": "0:1150:1"
				},
				"id": 1
			},
			"v2-core-master/contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "v2-core-master/contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							577
						]
					},
					"id": 578,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 504,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "215:66:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 514,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 511,
																			"src": "234:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 515,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "238:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 516,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "242:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "238:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "234:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 519,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "233:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 520,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "248:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "233:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "251:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "225:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "225:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "225:49:2"
											}
										]
									},
									"documentation": null,
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "168:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "168:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "176:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:16:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "207:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:8:2"
									},
									"scope": 577,
									"src": "155:126:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "347:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 536,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 533,
																			"src": "366:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 537,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "370:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 538,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "374:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "370:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "366:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "365:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 542,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "380:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "365:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "383:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "357:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "357:50:2"
											}
										]
									},
									"documentation": null,
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "300:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "308:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "299:16:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "339:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "339:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "338:8:2"
									},
									"scope": 577,
									"src": "287:127:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "480:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 558,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "498:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "503:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "498:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 561,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "509:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 562,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 550,
																						"src": "513:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 563,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 552,
																						"src": "517:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "513:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "509:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 566,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "508:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 567,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "522:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "508:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 569,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "527:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "508:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "498:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "530:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															595,
															596
														],
														"referencedDeclaration": 596,
														"src": "490:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "490:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "490:63:2"
											}
										]
									},
									"documentation": null,
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "433:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "441:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "441:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "432:16:2"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "472:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "471:8:2"
									},
									"scope": 577,
									"src": "420:140:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 578,
							"src": "132:430:2"
						}
					],
					"src": "0:563:2"
				},
				"id": 2
			}
		}
	}
}